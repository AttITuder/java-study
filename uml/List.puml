@startuml

Collection <|-- List
interface List<E>{
..Query Operations..
    int size()
    boolean isEmpty()
    boolean contains(Object o)
    Iterator<E> iterator()
    Object[] toArray()
    <T> T[] toArray(T[] a)
..Modification Operations..
    boolean add(E e)
    boolean remove(Object o)
..Bulk Modification Operations..
    boolean containsAll(Collection<?> c)
    boolean addAll(Collection<? extends E> c)
    boolean addAll(int index, Collection<? extends E> c)
    boolean removeAll(Collection<?> c)
    boolean retainAll(Collection<?> c)
    default void replaceAll(UnaryOperator<E> operator)
    @SuppressWarnings({"unchecked", "rawtypes"})
    default void sort(Comparator<? super E> c)
    void clear()
..Comparison and hashing..
    boolean equals(Object o)
    int hashCode();
..Positional Access Operations..
    E get(int index)
    E set(int index, E element)
    void add(int index, E element)
    E remove(int index)
..Search Operations..
    int indexOf(Object o)
    int lastIndexOf(Object o)
..List Iterators..
    ListIterator<E> listIterator()
    ListIterator<E> listIterator(int index)
..View..
    List<E> subList(int fromIndex, int toIndex)
    @Override
    default Spliterator<E> spliterator()
}

@enduml